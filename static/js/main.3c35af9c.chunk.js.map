{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","lis","SearchBox","handleChange","placeholder","onChange","e","target","value","App","setState","searchField","state","fetch","then","response","json","catch","error","console","log","this","regex","RegExp","toLowerCase","filteredMonsters","filter","match","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAEaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAQG,GAAlC,2BACHC,IAAKJ,EAAQK,OAEf,6BAAKL,EAAQK,OACb,4BAAIL,EAAQM,YCNHC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,CAAmBV,QAASU,GAAjBA,EAAIP,UCHfQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,YAAjB,OACvB,uBACEZ,UAAU,SACVY,YAAaA,EACbC,SAAU,SAACC,GAAD,OAAOH,EAAaG,EAAEC,OAAOC,YCiD5BC,E,kDAlDb,aAAe,IAAD,8BACZ,gBAuBFN,aAAe,SAACK,GACd,EAAKE,SAAS,CACZC,YAAaH,KAxBf,EAAKI,MAAQ,CACXb,SAAU,GACVY,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OAClBE,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACC,GAAD,OAAc,EAAKL,SAAS,CAAEX,SAAUgB,OAC7CE,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,oBAelC,WAAU,IAAD,EAC2BG,KAAKT,MAA/Bb,EADD,EACCA,SAAUY,EADX,EACWA,YACZW,EAAQ,IAAIC,OAAOZ,EAAYa,cAAe,KAC9CC,EAAmB1B,EAAS2B,QAAO,SAACnC,GAAD,OACvCA,EAAQK,KAAK4B,cAAcG,MAAML,MAGnC,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEY,YAAY,kBACZD,aAAckB,KAAKlB,eAErB,cAAC,EAAD,CAAUJ,SAAU0B,W,GA7CVG,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3c35af9c.chunk.js","sourcesContent":["import \"./card.styles.css\";\r\n\r\nexport const Card = ({ monster }) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      src={`https://robohash.org/${monster.id}/?set=set2&size=180x180`}\r\n      alt={monster.name}\r\n    />\r\n    <h2>{monster.name}</h2>\r\n    <p>{monster.email}</p>\r\n  </div>\r\n);\r\n","import \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = ({ monsters }) => (\r\n  <div className=\"card-list\">\r\n    {monsters.map((lis) => {\r\n      return <Card key={lis.id} monster={lis} />;\r\n    })}\r\n  </div>\r\n);\r\n","import \"./search-box.styles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const SearchBox = ({ handleChange, placeholder }) => (\r\n  <input\r\n    className=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={(e) => handleChange(e.target.value)}\r\n  />\r\n);\r\n\r\nSearchBox.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => this.setState({ monsters: response }))\n      .catch((error) => console.log(error));\n  }\n\n  // handleChange(value) {\n  //   this.setState({\n  //     searchField: value,\n  //   });\n  // }\n\n  handleChange = (value) => {\n    this.setState({\n      searchField: value,\n    });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const regex = new RegExp(searchField.toLowerCase(), \"i\");\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().match(regex)\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}